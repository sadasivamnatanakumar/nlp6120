<!DOCTYPE article PUBLIC "-//NLM//DTD Journal Archiving and Interchange DTD v2.3 20070202//EN" "archivearticle.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink" article-type="product-review"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">BMC Genomics</journal-id><journal-title>BMC Genomics</journal-title><issn pub-type="epub">1471-2164</issn><publisher><publisher-name>BioMed Central</publisher-name><publisher-loc>London</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">15333141</article-id><article-id pub-id-type="pmc">PMC516770</article-id><article-id pub-id-type="publisher-id">1471-2164-5-60</article-id><article-id pub-id-type="doi">10.1186/1471-2164-5-60</article-id><article-categories><subj-group subj-group-type="heading"><subject>Software</subject></subj-group></article-categories><title-group><article-title>POSA: Perl Objects for DNA Sequencing Data Analysis</article-title></title-group><contrib-group><contrib id="A1" corresp="yes" contrib-type="author"><name><surname>Aerts</surname><given-names>Jan A</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>jan.aerts@wur.nl</email></contrib><contrib id="A2" contrib-type="author"><name><surname>Jungerius</surname><given-names>Bart J</given-names></name><xref ref-type="aff" rid="I1">1</xref><xref ref-type="aff" rid="I2">2</xref><email>bart.jungerius@wur.nl</email></contrib><contrib id="A3" contrib-type="author"><name><surname>Groenen</surname><given-names>Martien AM</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>martien.groenen@wur.nl</email></contrib></contrib-group><aff id="I1"><label>1</label>Animal Breeding and Genetics Group, Wageningen University, PO Box 338, 6700AH Wageningen, Netherlands</aff><aff id="I2"><label>2</label>Complex Genetics Group, Department of Biomedical Genetics, University Medical Centre, PO Box 80030, 3508 TA Utrecht, Netherlands</aff><pub-date pub-type="collection"><year>2004</year></pub-date><pub-date pub-type="epub"><day>27</day><month>8</month><year>2004</year></pub-date><volume>5</volume><fpage>60</fpage><lpage>60</lpage><ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/1471-2164/5/60"/><history><date date-type="received"><day>23</day><month>6</month><year>2004</year></date><date date-type="accepted"><day>27</day><month>8</month><year>2004</year></date></history><permissions><copyright-statement>Copyright &#x000a9; 2004 Aerts et al; licensee BioMed Central Ltd.</copyright-statement><copyright-year>2004</copyright-year><copyright-holder>Aerts et al; licensee BioMed Central Ltd.</copyright-holder><license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0"><p>This is an open-access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0"/>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</p><!--<rdf xmlns="http://web.resource.org/cc/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1" xmlns:dcterms="http://purl.org/dc/terms"><Work xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" rdf:about=""><license rdf:resource="http://creativecommons.org/licenses/by/2.0"/><dc:type rdf:resource="http://purl.org/dc/dcmitype/Text"/><dc:author>
               Aerts
               A
               Jan
               
               jan.aerts@wur.nl
            </dc:author><dc:title>
            POSA: Perl Objects for DNA Sequencing Data Analysis
         </dc:title><dc:date>2004</dc:date><dcterms:bibliographicCitation>BMC Genomics 5(1): 60-. (2004)</dcterms:bibliographicCitation><dc:identifier type="sici">1471-2164(2004)5:1&#x0003c;60&#x0003e;</dc:identifier><dcterms:isPartOf>urn:ISSN:1471-2164</dcterms:isPartOf><License rdf:about="http://creativecommons.org/licenses/by/2.0"><permits rdf:resource="http://web.resource.org/cc/Reproduction" xmlns=""/><permits rdf:resource="http://web.resource.org/cc/Distribution" xmlns=""/><requires rdf:resource="http://web.resource.org/cc/Notice" xmlns=""/><requires rdf:resource="http://web.resource.org/cc/Attribution" xmlns=""/><permits rdf:resource="http://web.resource.org/cc/DerivativeWorks" xmlns=""/></License></Work></rdf>--></license></permissions><abstract><sec><title>Background</title><p>Capillary DNA sequencing machines allow the generation of vast amounts of data with little hands-on time. With this expansion of data generation, there is a growing need for automated data processing. Most available software solutions, however, still require user intervention or provide modules that need advanced informatics skills to allow implementation in pipelines.</p></sec><sec><title>Results</title><p>Here we present POSA, a pair of new perl objects that describe DNA sequence traces and <italic>Phrap </italic>contig assemblies in detail. Methods included in POSA include basecalling with quality scores (by <italic>Phred</italic>), contig assembly (by <italic>Phrap</italic>), generation of primer3 input and automated SNP annotation (by <italic>PolyPhred</italic>). Although easily implemented by users with only limited programming experience, these objects considerabily reduce hands-on analysis time compared to using the Staden package for extracting sequence information from raw sequencing files and for SNP discovery.</p></sec><sec><title>Conclusions</title><p>The POSA objects allow a flexible and easy design, implementation and usage of perl-based pipelines to handle and analyze DNA sequencing data, while requiring only minor programming skills.</p></sec></abstract></article-meta></front><body><sec><title>Background</title><p>Today, many genetics laboratories have access to modern capillary DNA sequencing machines, such as the ABI PRISM 3100, 3700 or 3730. These machines generate vast amounts of raw sequence data with little user intervention. Consequently, the amount of data to be analyzed has expanded and the bottleneck now is the analysis capacity. Data analysis capacity can be increased by higher levels of automation. Investments in infrastructures to process the raw sequencing data in sophisticated but rigid pipelines might be justified for larger laboratories and larger projects but might be too costly for smaller laboratories. In addition, rigid pipelines are too impractical if different projects share run-time on the same machine while requiring (slightly) different analysis procedures (e.g. vector trimming is needed in plasmid sequencing, but needless when sequencing PCR products).</p><p>Nucleotide sequence analysis can be performed with a variety of software tools. Although the number of console and web-based software tools has grown rapidly, the routine use of data input, output and storage may be inconvenient. Furthermore, for performing a series of analyses with different software tools, the sequence data need to be reformatted to the required data structure. Alternatively, sophisticated software suites that provide an integrated environment often are expensive.</p><p>Several of the available software solutions are designed to facilitate automated DNA sequence analysis at low cost. Well-known solutions are the Staden package and Bioperl.</p><p>The Staden Package contains <italic>pregap4 </italic>and <italic>gap4</italic>, full-featured applications with an intuitive graphical user interface [<xref ref-type="bibr" rid="B1">1</xref>]. These programs handle a list of raw sequence reads method-by-method. The programs in the Staden Package typically require a degree of user intervention and thus hands-on time.</p><p>Alternatively, Bioperl is a group of perl modules describing many genetics and genomics concepts [<xref ref-type="bibr" rid="B2">2</xref>]. For example, it includes the Bio::Seq::SeqWithQuality object that provides some of the basic properties of a raw sequence (i.e. its nucleotide sequence and quality values); the Bio::Tools::Primer3 object provides methods to work with primer3 input and output. However, to build custom DNA sequencing data pipelines, basic programming skills are needed to combine all these modules.</p><p>Smaller laboratory sites, however, often need to implement versatile pipelines that can be adjusted for any research question that suits the project best; at the same time, they often also do not have dedicated programmers available.</p><p>Although (semi-)automated procedures have been published by other groups [<xref ref-type="bibr" rid="B3">3</xref>,<xref ref-type="bibr" rid="B4">4</xref>], these are mostly focused on one particular pipeline and environment.</p><p>Here, we present POSA, a set of two new perl objects (Read.pm and Contig.pm) that describe a raw sequence and a <italic>Phrap </italic>contig in detail and are easily implemented in perl-based pipelines. Because these objects provide building blocks for sequencing data analysis pipelines and the actual pipelines are built using perl-scripts, the POSA objects can be used in very diverse settings.</p></sec><sec><title>Implementation</title><p>The POSA source code is entirely coded in object-oriented Perl and consists of two objects: Read.pm and Contig.pm. In general, there are two important concepts associated with objects: methods (built-in procedures that can be performed on the object) and properties (describing some of the characteristics of the object). Most methods in the objects rely on the availability of other third-party programs (see Dependencies). Basically, POSA provides a wrapper around these programs and provides easy design and implementation of these programs in automated data analysis. The Read.pm object describes a DNA sequence trace and includes methods for data import from a variety of formats. It relies on <italic>Phred </italic>[<xref ref-type="bibr" rid="B5">5</xref>,<xref ref-type="bibr" rid="B6">6</xref>] for import and interpretation of raw sequence data. The original trace data are stored in binary (<italic>scf</italic>) format within the object. Other methods of Read.pm use modules of the Staden Package [<xref ref-type="bibr" rid="B1">1</xref>], such as <italic>qclip </italic>and <italic>vector_clip </italic>(if installed). Properties of Read.pm include e.g. the DNA sequence, quality scores, template and vector names and read direction.</p><p>The Contig.pm object contains a method to assemble contigs of reads using the <italic>Phrap </italic>program [<xref ref-type="bibr" rid="B6">6</xref>]. The object typically is created based on a list of Read.pm objects and can be exported as alignments or screened for polymorphisms using <italic>PolyPhred </italic>[<xref ref-type="bibr" rid="B7">7</xref>].</p><p>Both the Read.pm and Contig.pm objects were designed with flexibility in mind. To allow a (virtually) unlimited amount of data to be processed, the perl scripts using these objects work sequence-by-sequence rather than method-by-method. Typically, these objects are called from straightforward perl scripts that outline the analysis steps to be performed. Example scripts using the objects can be accessed from the download website. An example of a script and output using the two objects to process a set of reads and annotate sequence polymorphisms from the assembled contig is given in Figure <xref ref-type="fig" rid="F1">1</xref> and Figure <xref ref-type="fig" rid="F2">2</xref>.</p><fig position="float" id="F1"><label>Figure 1</label><caption><p>A typical script that takes a list of ab1 files for analysis and assembly, reports the contig, and lists the putative SNP positions and SBE primers.</p></caption><graphic xlink:href="1471-2164-5-60-1"/></fig><fig position="float" id="F2"><label>Figure 2</label><caption><p>Typical output as generated by the script in Figure 1.</p></caption><graphic xlink:href="1471-2164-5-60-2"/></fig><p>POSA was developed with perl 5.6.1 and tested on a SuSE linux 8.1 system for <italic>abi</italic>-files from the ABI PRISM 377 DNA Sequencer and 3100 Genetic Analyzer (Applied Biosystems). <italic>Phred</italic>, <italic>Phrap </italic>and <italic>PolyPhred </italic>versions were 0.000925.c, 0.990329 and 4.05, respectively.</p></sec><sec><title>Results and Discussion</title><sec><title>Functionality</title><p>POSA provides an interface to design and implement automated sequencing data analysis. Sequencing data may be used in a variety of formats and originate from a variety of sources, e.g. data in <italic>fasta, abi/ab1 </italic>or <italic>scf </italic>format retrieved from websites or from newly generated traces. In addition, new objects can be initiated from a text file or can be opened from previous stored objects. Subsequently, a variety of methods can be applied, including basecalling and assessment of quality codes (by <italic>Phred</italic>), quality clipping, vector clipping, screening for <italic>E. coli </italic>(or other) sequence, contig assembly (by <italic>Phrap</italic>) and analysis. The method <italic>asPrimer3 </italic>can automatically generate input for the primer3 program [<xref ref-type="bibr" rid="B8">8</xref>] and is available in both objects. To facilitate automated SNP discovery or typing, the <italic>SearchSnp</italic>s method will generate output as shown in Figure <xref ref-type="fig" rid="F2">2</xref>. This method is based on the <italic>PolyPhred </italic>program and uses the 'rank' argument to set the stringency.</p><p>Finally, data can be stored in objects, or in files in either <italic>exp</italic>, <italic>scf </italic>or <italic>fasta </italic>format. In addition, the data can be saved in a <italic>primer3 </italic>input file to allow automated PCR primer design, or data can be saved in MIPE format (i.e. an XML format to store information on PCR experiments; see <ext-link ext-link-type="uri" xlink:href="http://mipe.sourceforge.net"/>). Data on assembled contigs can be exported as a list of reads in a contig, as consensus sequence, as alignment, as putative SNPs, as SBE primers for SNP genotyping or as <italic>gff </italic>file for visualization in Gbrowse [<xref ref-type="bibr" rid="B9">9</xref>]. Combinations of the diversity of input, analysis and output options allow for a wide spectrum of possible implementations. Examples of possible analysis pipelines include (but are not limited to) BAC-end sequencing with automated PCR primer design for chromosome walking and resequencing of PCR products with SNP annotation either for SNP genotyping or for SNP discovery and SBE primer design. Examples of scripts are provided on the web site <ext-link ext-link-type="uri" xlink:href="http://posa.sourceforge.net"/>.</p></sec><sec><title>Performance</title><p>Although it represents only one of the numerous possible POSA-based pipelines, performance of POSA was validated by comparison of SNP discovery with the data after analysis using the Staden package. To do so, 5 PCR products were resequenced from a panel of 16 individuals to identify SNPs. Manual editing using the Staden Package revealed a total of 48 SNPs. Automated analysis using POSA also yielded a total of 48 SNPs with SNP ranking codes 1-3. Together, 41 SNPs were assigned with both manual editing and POSA. The remaining 7 SNPs assigned in manual editing corresponded to SNPs with ranks 4-6 in the POSA analysis. The 7 SNPs that were only assigned by POSA all originated from regions with lower quality sequence. While analysis time was reduced from several hours to a few minutes, POSA assigned SNPs in a way that was highly consistent with manual editing. This was expected because POSA provides options for an integrated analysis pipeline, but essentially is a wrapper around well-established sequence analysis tools like <italic>Phred</italic>, <italic>Phrap </italic>and <italic>PolyPhred</italic>.</p></sec><sec><title>Intended use and benefits for users</title><p>POSA is a tool that provides easy and highly automated DNA sequence and contig data analysis using popular analysis tools. Automated sequence analysis reduces analysis time from several hours to a few minutes. Pipelines can easily be expanded or adapted through perl scripts. Writing or altering the perl scripts is straightforward to do for people with only basic computer skills, although more linux/unix experience might be necessary to install the required software (e.g. <italic>Phred </italic>and <italic>Phrap</italic>). Overall, this guaranties easy implementation of highly automated quality pipelines in combination with high flexibility in setup and design.</p><p>The perl objects are released under an open source license, allowing code improvements by the user community.</p></sec></sec><sec><title>Conclusions</title><p>POSA describes a DNA sequence read and a <italic>Phrap </italic>contig assembly in detail. These objects allow a flexible and easy setup of perl-based pipelines to handle DNA sequencing data, including generating primer3 input and automated SNP discovery, while requiring only little programming skills.</p></sec><sec><title>Availability and requirements</title><p>Project name: POSA</p><p>Project home page: <ext-link ext-link-type="uri" xlink:href="http://posa.sourceforge.net"/></p><p>Operating system: platform independent Programming language: Perl 5.6.1</p><p>License: Artistic License (Open Source)</p><sec><title>Requirements</title><p>&#x02022; Perl modules: Carp; Statistics::Descriptive; Tie::File; IO::File; POSIX:: Storable.</p><p>&#x02022; Phred, Phrap, PolyPhred</p><p>&#x02022; Pregap4, gap4 (Staden Package (optional))</p><p>&#x02022; Primer3 (optional)</p></sec></sec><sec><title>List of abbreviations</title><p>POSA Perl objects for DNA sequencing data analysis</p><p>SNP single nucleotide polymorphism</p><p>abi/ab1ABI PRISM trace file format</p><p>scf standard chromatogram format</p><p>exp experiment file format, developed by Staden (see <ext-link ext-link-type="uri" xlink:href="http://staden.sourceforge.net"/>)</p><p>MIPE minimum information on PCR experiments (see <ext-link ext-link-type="uri" xlink:href="http://mipe.sourceforge.net"/>)</p><p>BAC bacterial artificial chromosome</p><p>PCR polymerase chain reaction</p><p>SBE single base extension</p></sec><sec><title>Authors' contributions</title><p>JA programmed the Perl objects and participated in development of concept and architecture of the software; BJ participated in development of concept and architecture and wrote the manuscript; MG supervised the project. All authors read and approved the final manuscript.</p></sec></body><back><ack><sec><title>Acknowledgements</title><p>The authors wish to thank Tineke Veenendaal for testing.</p></sec></ack><ref-list><ref id="B1"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Staden</surname><given-names>R</given-names></name><name><surname>Beal</surname><given-names>KF</given-names></name><name><surname>Bonfield</surname><given-names>JK</given-names></name></person-group><article-title>The Staden package, 1998</article-title><source>Methods Mol Biol</source><year>2000</year><volume>132</volume><fpage>115</fpage><lpage>30</lpage><pub-id pub-id-type="pmid">10547834</pub-id></citation></ref><ref id="B2"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Stajich</surname><given-names>JE</given-names></name><name><surname>Block</surname><given-names>D</given-names></name><name><surname>Boulez</surname><given-names>K</given-names></name><name><surname>Brenner</surname><given-names>SE</given-names></name><name><surname>Chervitz</surname><given-names>SA</given-names></name><name><surname>Dagdigian</surname><given-names>C</given-names></name><name><surname>Fuellen</surname><given-names>G</given-names></name><name><surname>Gilbert</surname><given-names>JG</given-names></name><name><surname>Korf</surname><given-names>I</given-names></name><name><surname>Lapp</surname><given-names>H</given-names></name><name><surname>Lehvaslaiho</surname><given-names>H</given-names></name><name><surname>Matsalla</surname><given-names>C</given-names></name><name><surname>Mungall</surname><given-names>CJ</given-names></name><name><surname>Osborne</surname><given-names>BI</given-names></name><name><surname>Pocock</surname><given-names>MR</given-names></name><name><surname>Schattner</surname><given-names>P</given-names></name><name><surname>Senger</surname><given-names>M</given-names></name><name><surname>Stein</surname><given-names>LD</given-names></name><name><surname>Stupka</surname><given-names>E</given-names></name><name><surname>Wilkinson</surname><given-names>MD</given-names></name><name><surname>Birney</surname><given-names>E</given-names></name></person-group><article-title>The Bioperl toolkit: Perl modules for the life sciences</article-title><source>Genome Res</source><year>2002</year><volume>12</volume><fpage>1611</fpage><lpage>8</lpage><pub-id pub-id-type="pmid">12368254</pub-id><pub-id pub-id-type="doi">10.1101/gr.361602</pub-id></citation></ref><ref id="B3"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Mao</surname><given-names>C</given-names></name><name><surname>Cushman</surname><given-names>JC</given-names></name><name><surname>May</surname><given-names>GD</given-names></name><name><surname>Weller</surname><given-names>JW</given-names></name></person-group><article-title>ESTAP &#x02013; an automated system for the analysis of EST data</article-title><source>Bioinformatics</source><year>2003</year><volume>19</volume><fpage>1720</fpage><lpage>2</lpage><pub-id pub-id-type="pmid">15593407</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/btg205</pub-id></citation></ref><ref id="B4"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Xu</surname><given-names>H</given-names></name><name><surname>He</surname><given-names>L</given-names></name><name><surname>Zhu</surname><given-names>Y</given-names></name><name><surname>Huang</surname><given-names>W</given-names></name><name><surname>Fang</surname><given-names>L</given-names></name><name><surname>Tao</surname><given-names>L</given-names></name><name><surname>Zhu</surname><given-names>Y</given-names></name><name><surname>Cai</surname><given-names>L</given-names></name><name><surname>Xu</surname><given-names>H</given-names></name><name><surname>Zhang</surname><given-names>L</given-names></name><name><surname>Yu</surname><given-names>H</given-names></name><name><surname>Zhou</surname><given-names>Y</given-names></name></person-group><article-title>EST Pipeline System: detailed and automated EST data processing and mining</article-title><source>Geno Prot Bioinfo</source><volume>1</volume><fpage>236</fpage><lpage>242</lpage></citation></ref><ref id="B5"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Ewing</surname><given-names>B</given-names></name><name><surname>Hillier</surname><given-names>L</given-names></name><name><surname>Wendl</surname><given-names>MC</given-names></name><name><surname>Green</surname><given-names>P</given-names></name></person-group><article-title>Base-calling of automated sequencer traces using phred. I. Accuracy assessment</article-title><source>Genome Res</source><year>1998</year><volume>8</volume><fpage>175</fpage><lpage>85</lpage><pub-id pub-id-type="pmid">9521921</pub-id></citation></ref><ref id="B6"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Ewing</surname><given-names>B</given-names></name><name><surname>Green</surname><given-names>P</given-names></name></person-group><article-title>Base-calling of automated sequencer traces using phred. II. Error probabilities</article-title><source>Genome Res</source><year>1998</year><volume>8</volume><fpage>186</fpage><lpage>94</lpage><pub-id pub-id-type="pmid">9521922</pub-id></citation></ref><ref id="B7"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Nickerson</surname><given-names>DA</given-names></name><name><surname>Tobe</surname><given-names>VO</given-names></name><name><surname>Taylor</surname><given-names>SL</given-names></name></person-group><article-title>PolyPhred: automating the detection and genotyping of single nucleotide substitutions using fluorescence-based resequencing</article-title><source>Nucleic Acids Res</source><year>1997</year><volume>25</volume><fpage>2745</fpage><lpage>51</lpage><pub-id pub-id-type="pmid">9207020</pub-id><pub-id pub-id-type="doi">10.1093/nar/25.14.2745</pub-id></citation></ref><ref id="B8"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Rozen</surname><given-names>S</given-names></name><name><surname>Skaletsky</surname><given-names>H</given-names></name></person-group><article-title>Primer3 on the WWW for general users and for biologist programmers</article-title><source>Methods Mol Biol</source><year>2000</year><volume>132</volume><fpage>365</fpage><lpage>86</lpage><pub-id pub-id-type="pmid">10547847</pub-id></citation></ref><ref id="B9"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Stein</surname><given-names>LD</given-names></name><name><surname>Mungall</surname><given-names>C</given-names></name><name><surname>Shu</surname><given-names>SQ</given-names></name><name><surname>Caudy</surname><given-names>M</given-names></name><name><surname>Mangone</surname><given-names>M</given-names></name><name><surname>Day</surname><given-names>A</given-names></name><name><surname>Nickerson</surname><given-names>E</given-names></name><name><surname>Stajich</surname><given-names>JE</given-names></name><name><surname>Harris</surname><given-names>TW</given-names></name><name><surname>Arva</surname><given-names>A</given-names></name><name><surname>Lewis</surname><given-names>S</given-names></name></person-group><article-title>The Generic Genome Browser: a building block for a model organism system database</article-title><source>Genome Res</source><year>2002</year><volume>12</volume><fpage>1599</fpage><lpage>1610</lpage><pub-id pub-id-type="pmid">12368253</pub-id><pub-id pub-id-type="doi">10.1101/gr.403602</pub-id></citation></ref></ref-list></back></article>



